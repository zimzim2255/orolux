<%- include('partials/header') %>
<style>  .wishlist-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 12rem 2rem 6rem;
    min-height: 100vh;
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0.98), rgba(255, 255, 255, 1));
  }

  .wishlist-title {
    font-family: 'Cormorant Garamond', serif;
    font-size: 3rem;
    font-weight: 300;
    color: var(--deep-blue);
    margin-bottom: 5rem;
    text-align: center;
    letter-spacing: 3px;
    position: relative;
    padding-bottom: 1.5rem;
    text-transform: uppercase;
  }

  .wishlist-title::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 2px;
    background: #B8860B;
  }

  .empty-wishlist {
    text-align: center;
    padding: 4rem 2rem;
    background: rgba(180, 196, 214, 0.1);
    border-radius: 2px;
    font-family: 'Montserrat', sans-serif;
    color: rgba(10, 36, 64, 0.8);
  }

  .product-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
  }

  @media (max-width: 1024px) {
    .product-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 640px) {
    .product-grid {
      grid-template-columns: 1fr;
    }
  }

  .product-card {
    background: white;
    border-radius: 2px;
    overflow: hidden;
    transition: all 0.3s ease;
    position: relative;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  }

  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }

  .product-image-container {
    position: relative;
    aspect-ratio: 1;
    overflow: hidden;
    background: var(--bg);
  }

  .product-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.7s ease;
  }

  .product-card:hover .product-image {
    transform: scale(1.05);
  }

  .product-info {
    padding: 1.5rem;
    text-align: center;
  }

  .product-name {
    font-family: 'Montserrat', sans-serif;
    font-size: 1.1rem;
    color: var(--deep-blue);
    margin-bottom: 0.5rem;
    font-weight: 500;
  }

  .product-price {
    font-family: 'Montserrat', sans-serif;
    font-size: 1.2rem;
    color: #B8860B;
    margin-bottom: 1.5rem;
    font-weight: 300;
  }

  .product-actions {
    display: flex;
    justify-content: space-between;
    gap: 1rem;
  }

  .view-details-btn, .remove-btn {
    flex: 1;
    padding: 0.75rem 1rem;
    font-family: 'Montserrat', sans-serif;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    text-decoration: none;
    transition: all 0.3s ease;
    text-align: center;
    border-radius: 2px;
  }

  .view-details-btn {
    background-color: var(--deep-blue);
    color: white;
  }

  .view-details-btn:hover {
    background-color: #0a2440;
  }

  .remove-btn {
    background-color: transparent;
    color: #dc3545;
    border: 1px solid #dc3545;
  }

  .remove-btn:hover {
    background-color: #dc3545;
    color: white;
  }

  .continue-shopping-btn {
    display: inline-block;
    margin-top: 3rem;
    padding: 1rem 2rem;
    background-color: transparent;
    color: var(--deep-blue);
    border: 1px solid var(--deep-blue);
    border-radius: 2px;
    font-family: 'Montserrat', sans-serif;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .continue-shopping-btn:hover {
    background-color: var(--deep-blue);
    color: white;
    transform: translateY(-2px);
  }

  .toast-notification {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 1rem 2rem;
    background: var(--deep-blue);
    color: white;
    border-radius: 4px;
    font-family: 'Montserrat', sans-serif;
    z-index: 1000;
    opacity: 0;
    transform: translateY(-20px);
    transition: all 0.3s ease;
  }

  .toast-notification.show {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<div class="wishlist-container">
  <h2 class="wishlist-title">Your Wish List</h2>

  <% if (!wishlist || wishlist.length === 0) { %>
    <div class="empty-wishlist">
      <p>Your wish list is empty.</p>
      <a href="/products" class="continue-shopping-btn">Continue Shopping</a>
    </div>
  <% } else { %>
    <div class="product-grid">
      <% wishlist.forEach(item => { %>
        <% if (item && item.product) { %>
          <div class="product-card">
            <div class="product-image-container">
              <img src="<%= item.product.image || '/images/default-product.jpg' %>" 
                   alt="<%= item.product.name || 'Product' %>" 
                   class="product-image">
            </div>
            <div class="product-info">
              <h3 class="product-name"><%= item.product.name || 'Product Name' %></h3>
              <p class="product-price"><%= item.product.price ? item.product.price.toLocaleString() : '0' %> DH</p>
              <div class="product-actions">
                <a href="/product/<%= item.product._id %>" class="view-details-btn">View Details</a>
                <a href="/wishlist/remove/<%= item._id %>" class="remove-btn">Remove</a>
              </div>
            </div>
          </div>
        <% } %>
      <% }) %>
    </div>
    <div style="text-align: center;">
      <a href="/products" class="continue-shopping-btn">Continue Shopping</a>
    </div>
  <% } %>
</div>

<div id="toast" class="toast-notification"></div>

<script>
function showToast(message) {
  const toast = document.getElementById('toast');
  toast.textContent = message;
  toast.classList.add('show');
  setTimeout(() => {
    toast.classList.remove('show');
  }, 3000);
}

// Convert remove links to AJAX calls
document.addEventListener('DOMContentLoaded', () => {
  const removeButtons = document.querySelectorAll('.remove-btn');
  removeButtons.forEach(btn => {
    btn.addEventListener('click', async (e) => {
      e.preventDefault();
      const url = e.target.href;
      try {
        const response = await fetch(url, { method: 'GET' });
        if (response.ok) {
          const card = e.target.closest('.product-card');
          card.remove();
          showToast('Item removed from wishlist');
          
          // Check if wishlist is empty after removal
          const remainingCards = document.querySelectorAll('.product-card');
          if (remainingCards.length === 0) {
            location.reload(); // Reload to show empty wishlist state
          }
        }
      } catch (error) {
        showToast('Error removing item from wishlist');
      }
    });
  });
});
</script>

<%- include('partials/footer') %>