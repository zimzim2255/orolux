<!DOCTYPE html>
<html lang="en">
<head>
   <link rel="icon" type="image/jpeg" href="/public/logo.jpeg">

  <title>All Watches | OROLUX</title>
  <%- include('partials/head') %>
  <style>
    .product-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 2rem;
      padding: 2rem;
    }

    @media (max-width: 1024px) {
      .product-grid {
        grid-template-columns: repeat(2, 1fr);
      }
    }

    @media (max-width: 640px) {
      .product-grid {
        grid-template-columns: 1fr;
      }
    }

    .product-grid-item {
      position: relative;
      transition: all 0.3s ease;
    }

    .product-grid-item__content {
      position: relative;
      overflow: hidden;
    }

    .product-grid-item__images {
      position: relative;
      aspect-ratio: 1;
      overflow: hidden;
    }

    .product-grid-item__image-wrapper {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .product-grid-item__image-wrapper.is-active {
      opacity: 1;
    }

    .product-grid-item__image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.3s ease;
    }

    .product-grid-item:hover .product-grid-item__image {
      transform: scale(1.05);
    }

    .product__grid__info {
      padding: 1rem;
      text-align: center;
    }

    .product__grid__title {
      font-size: 1rem;
      margin-bottom: 0.5rem;
      color: #333;
    }

    .product__grid__price {
      font-size: 1.125rem;
      font-weight: 600;
      color: #000;
    }

    .visually-hidden {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      border: 0;
    }

    .search-container {
      max-width: 600px;
      margin: 2rem auto;
      padding: 0 1rem;
    }

    .search-form {
      position: relative;
      display: flex;
      align-items: center;
    }    .search-input {
      width: 100%;
      padding: 0.75rem 0;
      font-size: 1rem;
      border: none;
      border-bottom: 2px solid #e5e7eb;
      background-color: transparent;
      transition: all 0.3s ease;
    }

    .search-input:focus {
      outline: none;
      border-bottom-color: rgba(0, 0, 255, 0.5);
    }    .clear-button {
      position: absolute;
      right: 4.5rem;
      padding: 0.75rem;
      background-color: transparent;
      color: #999;
      border: none;
      cursor: pointer;
      transition: all 0.3s ease;
      font-size: 1.5rem;
      line-height: 1;
      opacity: 0;
      visibility: hidden;
      transform: translateX(10px);
    }

    .clear-button.visible {
      opacity: 1;
      visibility: visible;
      transform: translateX(0);
    }

    .clear-button:hover {
      color: #666;
    }

    .search-button {
      position: absolute;
      right: 0;
      padding: 0.75rem;
      background-color: transparent;
      color: rgba(0, 0, 255, 0.5);
      border: none;
      cursor: pointer;
      transition: all 0.3s ease;
      font-weight: 500;
    }    .search-button:hover {
      color: rgba(0, 0, 255, 0.7);
      transform: translateX(-2px);
    }

    .suggestions-container {
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      background: white;
      border-radius: 12px;
      margin-top: 0.5rem;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      opacity: 0;
      visibility: hidden;
      transform: translateY(-10px);
      transition: all 0.3s ease;
      z-index: 50;
      overflow: hidden;
    }

    .suggestions-container.active {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
    }

    .suggestion-item {
      padding: 1rem 1.5rem;
      cursor: pointer;
      display: flex;
      justify-content: space-between;
      align-items: center;
      transition: all 0.2s ease;
    }

    .suggestion-item:hover {
      background-color: #f8f8f8;
    }

    .suggestion-item:not(:last-child) {
      border-bottom: 1px solid #f0f0f0;
    }

    .suggestion-name {
      color: #333;
      font-weight: 500;
    }

    .suggestion-price {
      color: #666;
      font-size: 0.9rem;
    }
  </style>
</head>
<body class="font-sans antialiased">  <%- include('partials/header') %>
  <div class="container mx-auto px-4 py-8">
    <h2 class="text-3xl font-bold mb-6 text-center">All Watches</h2>    <div class="search-container">
      <form action="/products" method="GET" class="search-form">        <input 
          type="search" 
          name="search" 
          class="search-input" 
          placeholder="Search for luxury watches..." 
          value="<%= searchQuery || '' %>"
          aria-label="Search watches"
          autocomplete="off"
        >
        <button type="button" class="clear-button" aria-label="Clear search">Ã—</button>
        <button type="submit" class="search-button">Search</button>
        <div class="suggestions-container" id="searchSuggestions"></div>
      </form>
    </div>
    <% try { %>
      <% if (!products || products.length === 0) { %>
        <p>No products found.</p>
      <% } else { %>
        <div class="product-grid">
          <% products.forEach(product => { %>
            <div class="product-grid-item group/product-grid-item">
              <div class="product-grid-item__content">
                <div class="product-grid-item__container">
                  <a href="/product/<%= product._id %>">
                    <div class="product-grid-item__images">                      <div class="product-grid-item__image-wrapper is-active">
                        <img src="<%= product.image %>"
                             alt="<%= product.name %>" 
                             class="product-grid-item__image">
                      </div>
                    </div>
                  </a>
                </div>
              </div>
              <div class="product__grid__info">
                <a href="/product/<%= product._id %>">
                  <p class="visually-hidden"><%= product.name %></p>
                  <div class="product__grid__title__wrapper">
                    <p class="product__grid__title"><%= product.name %></p>
                  </div>
                  <div class="product__grid__price">
                    <span class="price"><%= product.price %> DH</span>
                  </div>
                </a>
              </div>
            </div>
          <% }) %>
        </div>
      <% } %>
    <% } catch (error) { %>
      <p>Error loading products. Please try again later.</p>
    <% } %>
  </div>
  <%- include('partials/footer') %>  <script>
    // Product carousel functionality
    document.querySelectorAll('.product-grid-item').forEach(item => {
      try {
        let currentImageIndex = 0;
        const images = item.querySelectorAll('.product-grid-item__image-wrapper');
        if (images.length > 1) {
          setInterval(() => {
            images[currentImageIndex].classList.remove('is-active');
            currentImageIndex = (currentImageIndex + 1) % images.length;
            images[currentImageIndex].classList.add('is-active');
          }, 3000);
        }
      } catch (error) {
        console.error('Error in image carousel:', error);
      }
    });

    // Search suggestions functionality
    const searchInput = document.querySelector('.search-input');
    const suggestionsContainer = document.querySelector('#searchSuggestions');
    let debounceTimeout;    const clearButton = document.querySelector('.clear-button');
    
    // Function to toggle clear button visibility
    const toggleClearButton = (value) => {
      if (value.length > 0) {
        clearButton.classList.add('visible');
      } else {
        clearButton.classList.remove('visible');
      }
    };

    // Initialize clear button visibility
    toggleClearButton(searchInput.value);

    // Clear search input when clear button is clicked
    clearButton.addEventListener('click', () => {
      searchInput.value = '';
      toggleClearButton('');
      suggestionsContainer.classList.remove('active');
      searchInput.focus();
    });

    searchInput.addEventListener('input', (e) => {
      clearTimeout(debounceTimeout);
      const query = e.target.value.trim();
      toggleClearButton(query);
      
      if (query.length < 2) {
        suggestionsContainer.classList.remove('active');
        return;
      }

      debounceTimeout = setTimeout(async () => {
        try {
          const response = await fetch(`/products/suggestions?search=${encodeURIComponent(query)}`);
          const suggestions = await response.json();
          
          if (suggestions.length > 0) {
            const html = suggestions.map(product => `
              <div class="suggestion-item" data-name="${product.name}">
                <span class="suggestion-name">${product.name}</span>
                <span class="suggestion-price">$${product.price} USD</span>
              </div>
            `).join('');
            
            suggestionsContainer.innerHTML = html;
            suggestionsContainer.classList.add('active');
          } else {
            suggestionsContainer.classList.remove('active');
          }
        } catch (error) {
          console.error('Error fetching suggestions:', error);
        }
      }, 300); // Debounce delay
    });

    // Handle suggestion clicks
    suggestionsContainer.addEventListener('click', (e) => {
      const suggestionItem = e.target.closest('.suggestion-item');
      if (suggestionItem) {
        searchInput.value = suggestionItem.dataset.name;
        searchInput.form.submit();
      }
    });

    // Close suggestions when clicking outside
    document.addEventListener('click', (e) => {
      if (!e.target.closest('.search-form')) {
        suggestionsContainer.classList.remove('active');
      }
    });

    // Close suggestions when pressing Escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        suggestionsContainer.classList.remove('active');
      }
    });
  </script>
</body>
</html>
